(function(d) {
	
    function i(a) {
        this.rawData = [];
        this.src = a.src;
        this.eventTagName = a.eventTagName;
        this.dateTagName = a.dateTagName;
        this.titleTagName = a.titleTagName;
        this.thumbTagName = a.thumbTagName;
        this.contentTagName = a.contentTagName;
        this.linkTagName = a.linkTagName;
        this.htmlEventClassName = a.htmlEventClassName;
        this.htmlDateClassName = a.htmlDateClassName;
        this.htmlTitleClassName = a.htmlTitleClassName;
        this.htmlContentClassName = a.htmlContentClassName;
        this.htmlLinkClassName = a.htmlLinkClassName;
        this.htmlThumbClassName =
            a.htmlThumbClassName;
        this.events = [];
        this.xmlDoc = 1;
        this.allMonths = "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" ");
        this.nDays = this.nMonths = this.nYears = 0;
        this.startYear = 3E4;
        this.endYear = 0
    }

    function g() {
        this.eventPositions = [];
        this.secondWidth = this.minuteWidth = this.hourWidth = this.dayWidth = this.monthWidth = this.yearWidth = this.width = this.eventNodeWidth = 0;
        this.showMonths = this.showYears = !1;
        this.showEveryNthYear = this.showEveryNthMonth = 1;
        this.showSeconds = this.showMinutes = this.showHours = this.showDays = !1;
        this.eventMargin = this.selectedEventContentsWidth = this.selectedEvent = this.yearId = this.yearPosition = this.monthPosition = this.monthId = this.step = this.nSmallScale = this.nLargeScale = 0
    }

    function k() {
        this.selectedEventContentsWidth = 0
    }
	
    var c, e, j, l = {
        lim: function(a, b, d) {
            a < b ? a = b : a > d && (a = d);
            return a
        }
    };
	
    i.prototype.loadXML = function(a) {
        var b = this;
        d.get(b.src, function(d) {
            b.xmlDoc = d;
            a.callback()
        })
    };
	
    i.prototype.getXMLContent = function() {
        for (var a = this.xmlDoc.getElementsByTagName(this.eventTagName), b = 0; b < a.length; b++) {
            var c =
                '<a href="' + d(a[b]).find(this.linkTagName).find("a").attr("href") + '">' + d(a[b]).find(this.linkTagName).find("a").text() + "</a>";
            this.rawData[b] = {
                date: d(a[b]).find(this.dateTagName).text(),
                title: d(a[b]).find(this.titleTagName).text(),
                thumb: d(a[b]).find(this.thumbTagName).text(),
                content: d(a[b]).find(this.contentTagName).text(),
                link: c
            }
        }
    };
	
    i.prototype.getHTMLContent = function() {
        for (var a = d("." + this.htmlEventClassName), b = 0; b < a.length; b++) this.rawData[b] = {
            date: d(a[b]).find("." + this.htmlDateClassName).html(),
            title: d(a[b]).find("." + this.htmlTitleClassName).html(),
            thumb: "",
            content: d(a[b]).find("." + this.htmlContentClassName).html(),
            link: d(a[b]).find("." + this.htmlLinkClassName).html()
        }, 0 != d(a[b]).find("." + this.htmlThumbClassName).length && (this.rawData[b].thumb = d(a[b]).find("." + this.htmlThumbClassName).html())
    };
	
    i.prototype.parseRawData = function() {
        for (var a, b, d, c = 0; c < this.rawData.length; c++) {
            if (-1 == this.rawData[c].date.search("BC")) {
                b = this.rawData[c].date.split(".");
                a = b[0];
                d = b[1];
                b = parseInt(b[2]);
                var f = 0,
                    f =
                    0 == parseInt(a[0]) ? parseInt(a[1]) : parseInt(a),
                    e = 0,
                    e = 0 == parseInt(d[0]) ? parseInt(d[1]) : parseInt(d);
                a = a + "." + d + "." + b
            } else a = this.rawData[c].date, b = parseInt("-" + this.rawData[c].date.replace(" ", "").replace("BC", ""));
            d = this.rawData[c].title;
            30 < d.length && (d = d.slice(0, 30), d += "...");
            var g = !1;
            if ("" != this.rawData[c].thumb) var g = !0,
                i = '<img src="' + this.rawData[c].thumb + '">';
            var h = this.rawData[c].content;
            400 < h.length && (h = h.slice(0, 400), h += "...");
            this.events[c] = {
                id: c,
                datestring: a,
                date: f,
                year: b,
                month: e,
                title: d,
                content: h,
                link: this.rawData[c].link,
                hasThumb: g,
                thumb: i
            }
        }
		
        for (c = 0; c < this.events.length; c++) parseInt(this.events[c].year) > this.endYear && (this.endYear = parseInt(this.events[c].year));
        for (c = 0; c < this.events.length; c++) parseInt(this.events[c].year) < this.startYear && (this.startYear = parseInt(this.events[c].year));
        
		this.nYears = this.endYear - this.startYear + 1;
        this.nMonths = Math.ceil((this.endDate - this.startDate) / this.months);
        this.nDays = Math.ceil((this.endDate - this.startDate) / this.days)
    };
	
    i.prototype.parseXML = function() {
        for (var a =
                this.xmlDoc.getElementsByTagName(this.eventTagName), b, c, e, f = 0; f < a.length; f++) {
            c = d(a[f]).find(this.dateTagName).text().split(".");
            b = c[0];
            e = c[1];
            c = parseInt(c[2]);
            var g = 0,
                g = 0 == parseInt(b[0]) ? parseInt(b[1]) : parseInt(b);
            b = 0;
            b = 0 == parseInt(e[0]) ? parseInt(e[1]) : parseInt(e);
            e = d(a[f]).find(this.titleTagName).text();
            30 < e.length && (e = e.slice(0, 30), e += "...");
            var i = !1;
            if (0 != d(a[f]).find(this.thumbTagName).length) var i = !0,
                j = '<img src="' + d(a[f]).find(this.thumbTagName).text() + '">';
            var h = d(a[f]).find(this.contentTagName).text();
            400 < h.length && (h = h.slice(0, 400), h += "...");
            this.events[f] = {
                id: f,
                date: g,
                year: c,
                month: b,
                title: e,
                content: h,
                link: d(a[f]).find(this.linkTagName).find("a"),
                hasThumb: i,
                thumb: j
            }
        }
        for (f = 0; f < this.events.length; f++) parseInt(this.events[f].year) > this.endYear && (this.endYear = parseInt(this.events[f].year));
        for (f = 0; f < this.events.length; f++) parseInt(this.events[f].year) < this.startYear && (this.startYear = parseInt(this.events[f].year));
        
		this.nYears = this.endYear - this.startYear + 1;
        this.nMonths = Math.ceil((this.endDate - this.startDate) /
            this.months);
        this.nDays = Math.ceil((this.endDate - this.startDate) / this.days)
    };
	
    i.prototype.parseHTML = function() {
        for (var a = d(".timeline-event"), b, c, e, f = 0; f < a.length; f++) {
            c = d(a[f]).find("." + this.htmlDateClassName).html().split(".");
            b = c[0];
            e = c[1];
            c = parseInt(c[2]);
            var g = 0,
                g = 0 == parseInt(b[0]) ? parseInt(b[1]) : parseInt(b);
            b = 0;
            b = 0 == parseInt(e[0]) ? parseInt(e[1]) : parseInt(e);
            e = d(a[f]).find("." + this.htmlTitleClassName).html();
            30 < e.length && (e = e.slice(0, 30), e += "...");
            var i = !1;
            if (0 != d(a[f]).find("." + this.htmlThumbClassName).length) var i = !0,
                j = '<img src="' + d(a[f]).find("." + this.htmlThumbClassName).html() + '">';
            var h = d(a[f]).find("." + this.htmlContentClassName).html();
            400 < h.length && (h = h.slice(0, 400), h += "...");
            this.events[f] = {
                id: f,
                date: g,
                year: c,
                month: b,
                title: e,
                content: h,
                link: d(a[f]).find("." + this.htmlLinkClassName).find("a"),
                hasThumb: i,
                thumb: j
            }
        }
        for (f = 0; f < this.events.length; f++) parseInt(this.events[f].year) > this.endYear && (this.endYear = parseInt(this.events[f].year));
        for (f = 0; f < this.events.length; f++) parseInt(this.events[f].year) < this.startYear &&
            (this.startYear = parseInt(this.events[f].year));
        
		this.nYears = this.endYear - this.startYear + 1;
        this.nMonths = Math.ceil((this.endDate - this.startDate) / this.months);
        this.nDays = Math.ceil((this.endDate - this.startDate) / this.days)
    };
	
    g.prototype.init = function(a) {
        this.target = a.target;
        this.width = this.target.outerWidth();
        this.yearWidth = this.width / c.nYears;
        this.monthWidth = this.yearWidth / 12;
        this.dayWidth = this.monthWidth / 30;
        "html" === a.mode && d(".timeline-html-wrap").hide();
        this.target.after().append('<div class="timeline-event-node"></div>');
        this.eventNodeWidth = d(".timeline-event-node").first().outerWidth();
        d(".timeline-event-node").remove();
        this.showMonths = 8 >= this.monthWidth ? !1 : !0;
        this.showEveryNthMonth = Math.round(this.width / this.monthWidth / 12);
        this.showEveryNthMonth -= this.showEveryNthMonth % 2;
        1 == c.nYears && (this.showEveryNthMonth = 1);
        this.showYears = this.yearWidth > this.width ? !1 : !0;
        this.showEveryNthYear = Math.round(this.width / this.yearWidth / 12);
        for (var a = this.showEveryNthYear + "", b = 1, e = 0; e < a.length - 1; e++) b += "0";
        this.showEveryNthYear = Math.round(this.showEveryNthYear /
            parseInt(b)) * parseInt(b);
        this.showEveryNthYear = 1 > this.showEveryNthYear ? 1 : this.showEveryNthYear;
        this.nLargeScale = c.nYears;
        this.nSmallScale = c.nMonths;
        this.step = this.monthWidth / 30
    };
	
    g.prototype.drawEvents = function() {
        var a;
        a = '<div class="timeline-wrap">\t<div class="timeline-events">\t<div class="timeline-years timeline-large-scale"></div>\t<div class="timeline-months timeline-small-scale"></div>';
        for (var b = 0; b < c.events.length; b++) a += '\t\t<div class="timeline-event timeline-bottom" id="timeline-event-' +
            c.events[b].id + '">', a += '\t\t\t<div class="timeline-event-node" id="timeline-event-node-' + c.events[b].id + '"></div>', a += '\t\t\t<div class="timeline-event-arrow"></div>', a += '\t\t\t<div class="timeline-event-contents">', 0 != c.events[b].title && (a += '\t\t\t<div class="timeline-event-title"><span>' + c.events[b].datestring + "</span>" + c.events[b].title + "</div>"), 0 != c.events[b].content && (a += '\t\t\t<div class="timeline-event-content">', c.events[b].hasThumb && (a += c.events[b].thumb), a += c.events[b].content + "</div>"),
            0 != c.events[b].link && (a += '\t\t\t<div class="timeline-event-link">' + c.events[b].link + "</div>"), a += "\t\t\t</div>", a += "\t\t</div>";
        this.target.html(a + "\t</div></div>")
    };
	
    g.prototype.setData = function() {
        for (var a = 0, b = 0, e = 0; e < c.events.length; e++) a = d("#timeline-event-" + c.events[e].id), b = a.find(".timeline-event-contents"), b.show(), a.data({
            offset: b.offset().left,
            smallWidth: b.width(),
            margin: parseInt(a.find(".timeline-event-contents").css("margin-left").replace("px", ""))
        }), b.hide()
    };
	
    g.prototype.addDates = function() {
        if (this.showYears)
            for (var a =
                    0; a < c.nYears + 1; a++) {
                if (a < c.nYears)
                    for (var b = 0; 12 > b; b++) this.addMonth();
                this.addYear()
            }
    };
	
    g.prototype.addMonth = function() {
        0 != this.monthId % 12 && this.showMonths && (0 == this.monthId % this.showEveryNthMonth ? d(".timeline-months").append('<div class="timeline-month timeline-dateblock" id="timeline-month-' + this.monthId + '">' + c.allMonths[this.monthId % 12] + "</div>") : d(".timeline-months").append('<div class="timeline-month timeline-dateblock" id="timeline-month-' + this.monthId + '"></div>'), d("#timeline-month-" + this.monthId).css({
            left: l.lim(this.monthPosition,
                0, this.width)
        }));
        this.monthPosition += this.monthWidth;
        this.monthId++
    };
	
    g.prototype.addYear = function() {
        if (this.showYears && 0 == this.yearId % this.showEveryNthYear) {
            var a = [],
                a = c.startYear + this.yearId + "";
            0 > a && (a = a.replace("-", "") + " BC");
            d(".timeline-years").append('<div class="timeline-year timeline-dateblock" id="timeline-year-' + this.yearId + '">' + a + "</div>");
            d("#timeline-year-" + this.yearId).css({
                left: l.lim(this.yearPosition, 0, this.width - 1)
            })
        }
        this.yearPosition += this.yearWidth;
        this.yearId++
    };
	
    g.prototype.positionEvents =
        function() {
            for (var a = 0; a < c.events.length; a++) c.events[a].position = e.getPosition(a);
            for (a = 0; a < c.events.length; a++);
            c.events.sort(function(a, c) {
                return a.position - c.position
            });
            for (a = 1; a < c.events.length; a++)
                if (c.events[a].position <= c.events[a - 1].position && (c.events[a].position = c.events[a - 1].position), Math.abs(c.events[a].position - c.events[a - 1].position) < e.eventNodeWidth) Math.abs(c.events[a].position - c.events[a - 1].position), c.events[a].position = c.events[a - 1].position + e.eventNodeWidth / 1.5;
            if (c.events[c.events.length -
                    1].position > root.width) {
                c.events[c.events.length - 1].position = root.width;
                for (a = c.events.length - 1; 0 < a; a--) c.events[a - 1].position >= c.events[a].position && (c.events[a - 1].position = c.events[a].position), Math.abs(c.events[a].position - c.events[a - 1].position) < e.eventNodeWidth && (Math.abs(c.events[a].position - c.events[a - 1].position), c.events[a - 1].position -= e.eventNodeWidth / 1.5), c.events[a].position -= e.eventNodeWidth / 2
            }
            root.drawEvents();
            root.setData();
            for (a = 0; a < c.events.length; a++) d("#timeline-event-" + c.events[a].id).css({
                left: c.events[a].position,
                "z-index": a
            })
        };
		
    g.prototype.getPosition = function(a) {
        root = this;
        var b = 0,
            b = root.monthWidth * (c.events[a].month - 1) + root.yearWidth * (c.events[a].year - c.startYear) + root.dayWidth * (c.events[a].date - 1) - e.eventNodeWidth / 2 - 1;
        return root.eventPositions[a] = b
    };
	
    g.prototype.showEvent = function(a) {
        var a = d("#" + a),
            b = a.find(".timeline-event-contents");
        this.aboveTimeline(a) && a.addClass("timeline-above");
        a.addClass("timeline-hover").find(".timeline-event-contents").fadeIn(200);
        a.find(".timeline-event-arrow").fadeIn(200);
        a.data({
            offset: b.offset().left,
            showed: !0
        });
        this.needMargin(a) && this.correctMargin(a)
    };
	
    g.prototype.hideEvent = function(a) {
        var b = d("#" + a);
        b.removeClass("timeline-hover").find(".timeline-event-contents").fadeOut(200, function() {
            d(this).closest(".timeline-above").removeClass("timeline-above");
            b.find(".timeline-event-contents").css({
                "margin-left": b.data("margin")
            })
        });
        b.removeClass("timeline-hover").find(".timeline-event-arrow").fadeOut(200);
        b.data({
            showed: !1
        })
    };
	
    g.prototype.selectEvent = function(a) {
        a.find(".timeline-event-contents");
        a.removeClass("timeline-above").addClass("timeline-selected").removeClass("timeline-hover");
        this.selectedEvent = a;
        a.data("showed") || this.showEvent(a.attr("id"));
        var b = this.needMargin(a, 400) ? -(a.data("offset") + 400 - (d(".timeline-wrap").offset().left + d(".timeline-wrap").outerWidth())) + a.data("margin") : a.data("margin");
        a.find(".timeline-event-contents").fadeIn(200).animate({
            width: 376,
            "margin-left": b
        }, 100, function() {
            a.find(".timeline-event-content").slideDown(200);
            a.find(".timeline-event-link").fadeIn(200)
        })
    };
	
    g.prototype.deselectEvent = function() {
        var a = d(".timeline-wrap").find(".timeline-selected");
        this.hideEvent(a.attr("id"));
        a.removeClass("timeline-selected");
        a.find(".timeline-event-content").slideUp(200, function() {
            a.find(".timeline-event-contents").css({
                width: a.data("smallWidth"),
                "margin-left": a.data("margin")
            })
        });
        a.find(".timeline-event-link").fadeOut(200);
        this.selectedEvent = 0
    };
	
    g.prototype.aboveTimeline = function(a) {
        return 0 != this.selectedEvent && !a.hasClass("timeline-selected") ? !0 : !1
    };
	
    g.prototype.needMargin = function(a, b) {
        b = void 0 === b ? a.find(".timeline-event-contents").outerWidth() : 400;
        return a.data("offset") +
            b > d(".timeline-wrap").offset().left + d(".timeline-wrap").outerWidth() ? !0 : !1
    };
	
    g.prototype.correctMargin = function(a, b, c) {
        b = void 0 === b ? a.find(".timeline-event-contents").outerWidth() : 400;
        b = a.data("offset") + b - (d(".timeline-wrap").offset().left + d(".timeline-wrap").outerWidth());
        c ? a.find(".timeline-event-contents").animate({
            "margin-left": -b + a.data("margin")
        }, 100) : a.find(".timeline-event-contents").css({
            "margin-left": -b + a.data("margin")
        })
    };
	
    k.prototype.setDOMEvents = function() {
        var a = this;
        d(".timeline-event-node").on("click",
            function() {
                0 == e.selectedEvent ? e.selectEvent(d(this).parent()) : d(this).parent().hasClass("timeline-selected") ? e.deselectEvent(d(this).parent()) : (e.deselectEvent(d(".timeline-selected")), e.selectEvent(d(this).parent()))
            });
        d(".timeline-event-node").on("mouseover", function() {
            0 == d(".timeline-selected").length && e.hideEvent(d(".timeline-hover").attr("id"));
            d(this).closest(".timeline-event").hasClass("timeline-hover") || e.showEvent(d(this).closest(".timeline-event").attr("id"))
        });
        d(".timeline-event-node").on("mouseout",
            function() {
                d(this).closest(".timeline-event").hasClass("timeline-selected") || e.hideEvent(d(this).closest(".timeline-event").attr("id"))
            });
        d(document).on("click", function(b) {
            0 != a.selectedEvent && 0 == d(b.target).closest(".timeline-wrap").length && e.deselectEvent()
        })
    };
	
    d.fn.extend({
        timelinexml: function(a) {
            var b = d.extend({
                src: "",
                showLatest: !1,
                selectLatest: !1,
                eventTagName: "event",
                dateTagName: "date",
                titleTagName: "title",
                thumbTagName: "thumb",
                contentTagName: "content",
                linkTagName: "link",
                mode: "xml",
                htmlEventClassName: "timeline-event",
                htmlDateClassName: "timeline-date",
                htmlTitleClassName: "timeline-title",
                htmlContentClassName: "timeline-content",
                htmlLinkClassName: "timeline-link",
                htmlThumbClassName: "timeline-thumb"
            }, a);
            c = new i(b);
            e = new g;
            j = new k;
            return this.each(function() {
                var a = d(this);
                if (0 != b.src.length) {
                    if (b.mode = "html", c.getHTMLContent(), c.parseRawData(), e.init({
                            target: a,
                            mode: "html"
                        }), e.positionEvents(), e.addDates(), j.setDOMEvents(), b.showLatest || b.selectLatest) e.showEvent("timeline-event-0"), b.selectLatest && setTimeout(function() {
                            e.selectEvent(d("#timeline-event-0"))
                        },
                        500)
                } else c.loadXML({
                    callback: function() {
                        c.getXMLContent();
                        c.parseRawData();
                        e.init({
                            target: a
                        });
                        e.positionEvents();
                        e.addDates();
                        j.setDOMEvents();
                        if (b.showLatest || b.selectLatest) e.showEvent("timeline-event-0"), b.selectLatest && setTimeout(function() {
                            e.selectEvent(d("#timeline-event-0"))
                        }, 500)
                    }
                })
            })
        }
    })
})(jQuery);